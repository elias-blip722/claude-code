version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: referral-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: referral_user
      POSTGRES_PASSWORD: referral_password
      POSTGRES_DB: referral_system
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U referral_user -d referral_system"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: referral-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: referral-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://referral_user:referral_password@postgres:5432/referral_system
      REDIS_URL: redis://redis:6379
      NODE_ENV: production
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ./backend/.env

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: referral-frontend
    restart: unless-stopped
    ports:
      - "5173:80"
    depends_on:
      - backend
    environment:
      VITE_API_URL: http://localhost:3000/api

  # ClamAV Antivirus (Optional)
  clamav:
    image: clamav/clamav:latest
    container_name: referral-clamav
    restart: unless-stopped
    ports:
      - "3310:3310"
    volumes:
      - clamav_data:/var/lib/clamav

volumes:
  postgres_data:
  redis_data:
  clamav_data:

networks:
  default:
    name: referral-network
